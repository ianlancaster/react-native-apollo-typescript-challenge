// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Reservations.component renders correctly 1`] = `
Array [
  <RCTScrollView
    data={
      Array [
        Object {
          "__typename": "Reservation",
          "arrivalDate": "Reservation 0 - arrivalDate",
          "departureDate": "Reservation 0 - departureDate",
          "hotelName": "Reservation 0 - hotelName",
          "id": "Reservation 0 - id",
          "name": "Reservation 0 - name",
        },
        Object {
          "__typename": "Reservation",
          "arrivalDate": "Reservation 1 - arrivalDate",
          "departureDate": "Reservation 1 - departureDate",
          "hotelName": "Reservation 1 - hotelName",
          "id": "Reservation 1 - id",
          "name": "Reservation 1 - name",
        },
        Object {
          "__typename": "Reservation",
          "arrivalDate": "Reservation 2 - arrivalDate",
          "departureDate": "Reservation 2 - departureDate",
          "hotelName": "Reservation 2 - hotelName",
          "id": "Reservation 2 - id",
          "name": "Reservation 2 - name",
        },
        Object {
          "__typename": "Reservation",
          "arrivalDate": "Reservation 3 - arrivalDate",
          "departureDate": "Reservation 3 - departureDate",
          "hotelName": "Reservation 3 - hotelName",
          "id": "Reservation 3 - id",
          "name": "Reservation 3 - name",
        },
        Object {
          "__typename": "Reservation",
          "arrivalDate": "Reservation 4 - arrivalDate",
          "departureDate": "Reservation 4 - departureDate",
          "hotelName": "Reservation 4 - hotelName",
          "id": "Reservation 4 - id",
          "name": "Reservation 4 - name",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "backgroundColor": "rgb(218, 242, 252)",
        "padding": 5,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "white",
              "margin": 5,
              "padding": 5,
            }
          }
        >
          <Text>
            Name: 
            Reservation 0 - name
          </Text>
          <Text>
            Hotel Name: 
            Reservation 0 - hotelName
          </Text>
          <Text>
            Arrival Date: 
            Reservation 0 - arrivalDate
          </Text>
          <Text>
            Departure Date: 
            Reservation 0 - departureDate
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "white",
              "margin": 5,
              "padding": 5,
            }
          }
        >
          <Text>
            Name: 
            Reservation 1 - name
          </Text>
          <Text>
            Hotel Name: 
            Reservation 1 - hotelName
          </Text>
          <Text>
            Arrival Date: 
            Reservation 1 - arrivalDate
          </Text>
          <Text>
            Departure Date: 
            Reservation 1 - departureDate
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "white",
              "margin": 5,
              "padding": 5,
            }
          }
        >
          <Text>
            Name: 
            Reservation 2 - name
          </Text>
          <Text>
            Hotel Name: 
            Reservation 2 - hotelName
          </Text>
          <Text>
            Arrival Date: 
            Reservation 2 - arrivalDate
          </Text>
          <Text>
            Departure Date: 
            Reservation 2 - departureDate
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "white",
              "margin": 5,
              "padding": 5,
            }
          }
        >
          <Text>
            Name: 
            Reservation 3 - name
          </Text>
          <Text>
            Hotel Name: 
            Reservation 3 - hotelName
          </Text>
          <Text>
            Arrival Date: 
            Reservation 3 - arrivalDate
          </Text>
          <Text>
            Departure Date: 
            Reservation 3 - departureDate
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "white",
              "margin": 5,
              "padding": 5,
            }
          }
        >
          <Text>
            Name: 
            Reservation 4 - name
          </Text>
          <Text>
            Hotel Name: 
            Reservation 4 - hotelName
          </Text>
          <Text>
            Arrival Date: 
            Reservation 4 - arrivalDate
          </Text>
          <Text>
            Departure Date: 
            Reservation 4 - departureDate
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>,
  <View
    accessible={true}
    focusable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgb(0, 157, 224)",
        "height": 80,
        "justifyContent": "center",
        "opacity": 1,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "white",
          "fontSize": 20,
        }
      }
    >
      Add New Reservation
    </Text>
  </View>,
]
`;
